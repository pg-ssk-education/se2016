DROP TABLE IF EXISTS se2016_M_BELONGING;

CREATE TABLE se2016_M_BELONGING (
    GROUP_ID     VARCHAR(16) NOT NULL COMMENT 'グループID'
   ,USER_ID      VARCHAR(32) NOT NULL COMMENT 'ユーザID'
   ,INS_DATETIME DATETIME    NOT NULL COMMENT '追加日時'
   ,INS_USER_ID  INTEGER     NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME DATETIME    NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID  INTEGER     NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM      INTEGER     NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION     INTEGER     NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE        INTEGER     NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(GROUP_ID,USER_ID)
   ,INDEX(USER_ID,GROUP_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_M_BELONGING_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_M_BELONGING_UPDATE_TRIGGER AFTER UPDATE ON se2016_M_BELONGING FOR EACH ROW
BEGIN
    UPDATE
        se2016_M_BELONGING
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_M_FUNCTION;

CREATE TABLE se2016_M_FUNCTION (
    FUNCTION_ID  VARCHAR(16) NOT NULL COMMENT '機能ID'
   ,NAME         VARCHAR(64) NOT NULL COMMENT '機能名'
   ,ORDER_NUM    INTEGER     NOT NULL COMMENT '表示順'
   ,INS_DATETIME DATETIME    NOT NULL COMMENT '追加日時'
   ,INS_USER_ID  INTEGER     NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME DATETIME    NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID  INTEGER     NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM      INTEGER     NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION     INTEGER     NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE        INTEGER     NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(FUNCTION_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;


DROP TRIGGER IF EXISTS se2016_M_FUNCTION_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_M_FUNCTION_UPDATE_TRIGGER AFTER UPDATE ON se2016_M_FUNCTION FOR EACH ROW
BEGIN
    UPDATE
        se2016_M_FUNCTION
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_M_GROUP;

CREATE TABLE se2016_M_GROUP (
    GROUP_ID     VARCHAR(16)   NOT NULL COMMENT 'グループＩＤ'
   ,NAME         VARCHAR(64)   NOT NULL COMMENT 'グループ名'
   ,ORDER_NUM    INTEGER       NOT NULL COMMENT '表示順'
   ,COMMENT      VARCHAR(1024) COMMENT 'コメント'
   ,INS_DATETIME DATETIME      NOT NULL COMMENT '追加日時'
   ,INS_USER_ID  INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME DATETIME      NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID  INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM      INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION     INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE        INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(GROUP_ID)
   ,INDEX(ORDER_NUM)
   ,INDEX(NAME)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_M_GROUP_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_M_GROUP_UPDATE_TRIGGER AFTER UPDATE ON se2016_M_GROUP FOR EACH ROW
BEGIN
    UPDATE
        se2016_M_GROUP
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_M_USER;

CREATE TABLE se2016_M_USER (
    USER_ID        VARCHAR(32)   NOT NULL COMMENT 'ユーザID'
   ,PASSWORD       VARCHAR(64)   NOT NULL COMMENT 'パスワード' /* SHA256なら64文字なのでOK? */
   ,NAME           VARCHAR(64)   NOT NULL COMMENT '氏名'
   ,NAME_KANA      VARCHAR(64)   NOT NULL COMMENT '氏名(カナ)'
   ,COMMENT        VARCHAR(1024) COMMENT 'コメント'
   ,SEAL_FILE_ID   VARCHAR(16)   COMMENT '印鑑ファイルID'
   ,EMPLOYEE_NUM   VARCHAR(16)   COMMENT '社員番号'
   ,MAIL_ADDRESS   VARCHAR(256)  COMMENT 'メールアドレス'
   ,PASSWORD_LIMIT DATETIME      NOT NULL COMMENT 'パスワード期限'
   ,PASSWORD_KEY   VARCHAR(32)   NOT NULL COMMENT 'パスワード変更キー'
   ,INS_DATETIME   DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '追加日時'
   ,INS_USER_ID    INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME   DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新日時'
   ,UPD_USER_ID    INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM        INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION       INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE          INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(USER_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_M_USER_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_M_USER_UPDATE_TRIGGER AFTER UPDATE ON se2016_M_USER FOR EACH ROW
BEGIN
    UPDATE
        se2016_M_USER
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_M_WF;

CREATE TABLE se2016_M_WF (
    WF_ID            VARCHAR(16)   NOT NULL COMMENT 'ワークフローID'
   ,STEP_NUM         INTEGER       NOT NULL COMMENT 'ステップ番号'
   ,NAME             VARCHAR(64)   NOT NULL COMMENT 'ワークフロー名'
   ,APPROVAL_USER_ID VARCHAR(32)   NOT NULL COMMENT '承認ユーザID'
   ,COMMENT          VARCHAR(1024) COMMENT 'コメント'
   ,INS_DATETIME     DATETIME      NOT NULL COMMENT '追加日時'
   ,INS_USER_ID      INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME     DATETIME      NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID      INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM          INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION         INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE            INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(WF_ID,STEP_NUM)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_M_WF_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_M_WF_UPDATE_TRIGGER AFTER UPDATE ON se2016_M_WF FOR EACH ROW
BEGIN
    UPDATE
        se2016_M_WF
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_T_FILE;

CREATE TABLE se2016_T_FILE (
    FILE_ID      VARCHAR(16)   NOT NULL COMMENT 'ファイルID'
   ,NAME         VARCHAR(128)  NOT NULL COMMENT 'ファイル名'
   ,CONTENT      LONGBLOB      NOT NULL COMMENT 'コンテンツ'
   ,MIME_TYPE    VARCHAR(32)   NOT NULL COMMENT 'MIMEタイプ'
   ,COMMENT      VARCHAR(1024) COMMENT 'コメント'
   ,INS_DATETIME DATETIME      NOT NULL COMMENT '追加日時'
   ,INS_USER_ID  INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME DATETIME      NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID  INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM      INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION     INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE        INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(FILE_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_T_FILE_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_T_FILE_UPDATE_TRIGGER AFTER UPDATE ON se2016_T_FILE FOR EACH ROW
BEGIN
    UPDATE
        se2016_T_FILE
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_T_NOTIFICATION;

CREATE TABLE se2016_T_NOTIFICATION (
    NOTIFICATION_ID VARCHAR(16)   NOT NULL COMMENT '通知ID'
   ,TARGET_USER_ID  VARCHAR(16)   NOT NULL COMMENT '対象ユーザID'
   ,LEVEL           VARCHAR(1)    NOT NULL COMMENT '通知レベル' /* I:information W:warning A:Alert */
   ,COMMENT         VARCHAR(1024) COMMENT 'コメント'
   ,CONFIRMED       VARCHAR(1)    NOT NULL COMMENT '確認フラグ'
   ,FUNCTION_ID     VARCHAR(16)   COMMENT '機能ID'
   ,INS_DATETIME    DATETIME      NOT NULL COMMENT '追加日時'
   ,INS_USER_ID     INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME    DATETIME      NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID     INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM         INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION        INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE           INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(NOTIFICATION_ID)
   ,INDEX(TARGET_USER_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_T_NOTIFICATION_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_T_NOTIFICATION_UPDATE_TRIGGER AFTER UPDATE ON se2016_T_NOTIFICATION FOR EACH ROW
BEGIN
    UPDATE
        se2016_T_NOTIFICATION
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
$DELIMITER ;


DROP TABLE IF EXISTS se2016_T_REQ_HEADER;

CREATE TABLE se2016_T_REQ_HEADER (
    REQ_ID           VARCHAR(16) NOT NULL COMMENT '申請ID'
   ,WF_ID            VARCHAR(16) NOT NULL COMMENT 'ワークフローID'
   ,REQ_USER_ID      VARCHAR(16) NOT NULL COMMENT '申請ユーザID'
   ,DOC_ID           VARCHAR(16) NOT NULL COMMENT '文書ID'
   ,REQ_STATE        VARCHAR(16) NOT NULL COMMENT '申請状態(EDITING:編集中, APPLYING:申請中, APPROVAL:承認, DENIAL:否認)'
   ,APPROVAL_USER_ID INTEGER     NOT NULL COMMENT '承認ユーザID'
   ,INS_DATETIME     DATETIME    NOT NULL COMMENT '追加日時'
   ,INS_USER_ID      INTEGER     NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME     DATETIME    NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID      INTEGER     NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM          INTEGER     NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION         INTEGER     NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE            INTEGER     NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(REQ_ID)
   ,INDEX(REQ_USER_ID)
   ,INDEX(APPROVAL_USER_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_T_REQ_HEADER_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_T_REQ_HEADER_UPDATE_TRIGGER AFTER UPDATE ON se2016_T_REQ_HEADER FOR EACH ROW
BEGIN
    UPDATE
        se2016_T_REQ_HEADER
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
DELIMITER ;


DROP TABLE IF EXISTS se2016_T_REQ_HISTORY;

CREATE TABLE se2016_T_REQ_HISTORY (
    REQ_ID       INTEGER       NOT NULL COMMENT '申請ID'
   ,BRANCH       INTEGER       NOT NULL COMMENT '枝番'
   ,USER_ID      INTEGER       NOT NULL COMMENT 'ユーザID'
   ,OPERATION    VARCHAR(16)   NOT NULL COMMENT '操作(APPLICATION:申請, APPROVAL:承認, DENIAL:否認)'
   ,COMMENT      VARCHAR(1024) COMMENT 'コメント'
   ,INS_DATETIME DATETIME      NOT NULL COMMENT '追加日時'
   ,INS_USER_ID  INTEGER       NOT NULL COMMENT '追加ユーザID'
   ,UPD_DATETIME DATETIME      NOT NULL COMMENT '更新日時'
   ,UPD_USER_ID  INTEGER       NOT NULL COMMENT '更新ユーザID'
   ,ROW_NUM      INTEGER       NOT NULL AUTO_INCREMENT COMMENT '行番号'
   ,REVISION     INTEGER       NOT NULL DEFAULT 1 COMMENT 'リビジョン'
   ,STATE        INTEGER       NOT NULL DEFAULT 0 COMMENT '状態'
   ,PRIMARY KEY(REQ_ID,BRANCH)
   ,INDEX(USER_ID)
   ,INDEX(ROW_NUM)
   ,UNIQUE KEY(ROW_NUM)
)
;

DROP TRIGGER IF EXISTS se2016_T_REQ_HISTORY_UPDATE_TRIGGER;
DELIMITER $$
CREATE TRIGGER se2016_T_REQ_HISTORY_UPDATE_TRIGGER AFTER UPDATE ON se2016_T_REQ_HISTORY FOR EACH ROW
BEGIN
    UPDATE
        se2016_T_REQ_HISTORY
    SET
        UPD_DATETIME = CURRENT_TIMESTAMP
       ,REVISION = OLD.REVISION + 1
    WHERE
        ROW_NUM = OLD.ROW_NUM
    ;
END
$$
DELIMITER ;


